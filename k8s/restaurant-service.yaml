apiVersion: apps/v1
kind: Deployment
metadata:
  name: restaurant-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: restaurant-service
  template:
    metadata:
      labels:
        app: restaurant-service
    spec:
      containers:
        - name: restaurant-service
          image: restaurant-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 3000
          resources:
            limits:
              memory: "512Mi"
              cpu: "0.5"
            requests:
              memory: "256Mi"
              cpu: "0.25"
          livenessProbe:
            httpGet:
              path: /restaurants
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /restaurants
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: uploads-volume
              mountPath: /app/uploads
          envFrom:
            - configMapRef:
                name: restaurant-config
          env:
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: secret
      volumes:
        - name: uploads-volume
          persistentVolumeClaim:
            claimName: restaurant-uploads-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: restaurant-uploads-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: hostpath
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: restaurant-config
data:
  PORT: "3000"
  MONGODB_URI: "mongodb://mongo:27017/restaurant_db"
---
apiVersion: v1
kind: Service
metadata:
  name: restaurant-service
spec:
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30006
  selector:
    app: restaurant-service
